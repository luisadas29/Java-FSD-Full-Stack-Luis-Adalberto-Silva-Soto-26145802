package phase1;
import java.io.File;
import java.util.*;
import java.io.IOException;

public class FileOperations {
	File path = new File(System.getProperty("user.dir"));// home directory
	//File path =new File("C:\\Phase1\\");
	String set [] = path.list();
	SortedSet<String> temp = new TreeSet<String> (String.CASE_INSENSITIVE_ORDER);
	Scanner choice2= new Scanner(System.in);
	String d;
	//StringBuffer example = new StringBuffer(path.getAbsolutePath());
	
	//this Function ....
	public SortedSet<String> retrieveFiles(){ 
	    set = path.list();
		for (int i=0; i < set.length; i++) {
			temp.add(set[i]);
		}
		return temp;		
	}
	//This Function ....
	public void addFile() throws IOException 
	{
		System.out.println("Name of the File to be created ->");
		d = choice2.next();
		int c=this.findFile(d);
		if (c>=0) {
			File newFile = new File(path.getAbsolutePath()+"\\"+d);
			newFile.createNewFile();
		}else {System.out.println("File Already Exists! \n");}
		
	}
	//This Function ...
	public void search(){
		System.out.println("Name of the File to be searched ->");
		d = choice2.next();
		//File temp = new File (path.getAbsolutePath()+"\\"+d);
		//System.out.println(temp);
		//System.out.println(temp.exists());
		int b = this.findFile(d);
		//System.out.println(b);
		if (b >= 0) {
			System.out.println("File Found! \n");
		}else {System.out.println("File Not Found! \n");}
	}
	
	public void deleteFile() {
		System.out.println("Name of the File to be deleted ->");
		d = choice2.next();
		//File temp = new File (path.getAbsolutePath()+"\\"+d);
		//temp.delete();
		int a = this.findFile(d);
		if (a>=0) {
			//String x = set[a];
		    File newFile1 = new File (path.getAbsolutePath()+"\\"+d);
		    newFile1.delete();
		}else {
			System.out.println("File does not exist! \n");
		}
	}
	// This Function received the User inputed String - and then checks if it matches with any of the File names in
	// the directory - if it does it returns the Index in the set, if it does not it returns a negative number.
	public int findFile(String a) { //STRCMPI find
		int j;
		int c = -1;
		set = path.list();
		for (int i=0; i < set.length; i++) {
		 j = set[i].compareTo(a);
			if (j == 0 ) {
				c = i;
			}	
		}
		return c;
	}
}
